/* ________________________________________________________ */
/*                  _                _  _                   */
/*    /\  /\  ___  | |  ___  __   __(_)| |__    ___  ___    */
/*   / /_/ / / _ \ | | / _ \ \ \ / /| || '_ \  / _ \/ __|   */
/*  / __  / | (_) || || (_) | \ V / | || |_) ||  __/\__ \   */
/*  \/ /_/   \___/ |_| \___/   \_/  |_||_.__/  \___||___/   */
/* ________________________________________________________ */

#pragma once

template <typename T>
void cudaXMalloc(T** devPtr, size_t size)
{
    cudaSafeCall(cudaMalloc(devPtr, size));
}

template <typename T>
void cudaXMallocHost(T** devPtr, size_t size)
{
    cudaSafeCall(cudaMallocHost(devPtr, size));
}